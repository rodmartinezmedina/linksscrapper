import{UIString as e,Settings as t}from"../common/common.js";import{Reload as s}from"../components/components.js";import{userMetrics as n,UserMetrics as i,InspectorFrontendHost as r}from"../host/host.js";import{Widget as a,Utils as o,ARIAUtils as c,ViewManager as l,Toolbar as d,View as h,TabbedPane as b,Dialog as m,GlassPane as g,SettingsUI as p,UIUtils as u,InspectorView as S,ListWidget as x,ListModel as _,ListControl as f,Icon as v,ActionRegistry as C}from"../ui/ui.js";class k extends a.VBox{constructor(){super(!0),this.registerRequiredCSS("settings/settingsScreen.css"),this.contentElement.classList.add("settings-window-main"),this.contentElement.classList.add("vbox");const e=createElement("div"),t=o.createShadowRootWithCoreStyles(e,"settings/settingsScreen.css").createChild("div","settings-window-title");c.markAsHeading(t,1),t.textContent=ls`Settings`,this._tabbedLocation=l.ViewManager.instance().createTabbedLocation(()=>k._revealSettingsScreen(),"settings-view");const s=this._tabbedLocation.tabbedPane();if(s.leftToolbar().appendToolbarItem(new d.ToolbarItem(e)),s.setShrinkableTabs(!1),s.makeVerticalTabLayout(),!Root.Runtime.experiments.isEnabled("customKeyboardShortcuts")){const e=new h.SimpleView(ls`Shortcuts`);self.UI.shortcutsScreen.createShortcutsTabView().show(e.element),this._tabbedLocation.appendView(e)}s.show(this.contentElement),s.selectTab("preferences"),s.addEventListener(b.Events.TabInvoked,this._tabInvoked,this),this._reportTabOnReveal=!1}static _revealSettingsScreen(){const e=self.runtime.sharedInstance(k);if(e.isShowing())return e;e._reportTabOnReveal=!0;const t=new m.Dialog;return t.contentElement.tabIndex=-1,t.addCloseButton(),t.setOutsideClickCallback(()=>{}),t.setPointerEventsBehavior(g.PointerEventsBehavior.PierceGlassPane),t.setOutsideTabIndexBehavior(m.OutsideTabIndexBehavior.PreserveMainViewTabIndex),e.show(t.contentElement),t.show(),e}static async _showSettingsScreen(e={}){const{name:t,focusTabHeader:s}=e,n=k._revealSettingsScreen();n._selectTab(t||"preferences");const i=n._tabbedLocation.tabbedPane();await i.waitForTabElementUpdate(),s?i.focusSelectedTabHeader():i.focus()}resolveLocation(e){return this._tabbedLocation}_selectTab(e){this._tabbedLocation.tabbedPane().selectTab(e,!0)}_tabInvoked(e){const t=e.data;if(!t.isUserGesture)return;const s=t.prevTabId,n=t.tabId;!this._reportTabOnReveal&&s&&s===n||(this._reportTabOnReveal=!1,this._reportSettingsPanelShown(n))}_reportSettingsPanelShown(e){e!==ls`Shortcuts`?n.settingsPanelShown(e):n.settingsPanelShown("shortcuts")}}class E extends a.VBox{constructor(e,t){super(),this.element.classList.add("settings-tab-container"),t&&(this.element.id=t);this.element.createChild("header").createChild("h1").createTextChild(e),this.containerElement=this.element.createChild("div","settings-container-wrapper").createChild("div","settings-tab settings-content settings-container")}_appendSection(e){const t=this.containerElement.createChild("div","settings-block");if(e){c.markAsGroup(t);const s=t.createChild("div","settings-section-title");s.textContent=e,c.markAsHeading(s,2),c.setAccessibleName(t,e)}return t}}class w extends E{constructor(){super(e.UIString("Preferences"),"preferences-tab-content");const n=["","Appearance","Sources","Elements","Network","Performance","Console","Extensions","Persistence","Debugger","Global"];this._nameToSection=new Map;for(const e of n)this._createSectionElement(e);self.runtime.extensions("setting").forEach(this._addSetting.bind(this)),self.runtime.extensions(p.SettingUI).forEach(this._addSettingUI.bind(this)),this._appendSection().appendChild(u.createTextButton(e.UIString("Restore defaults and reload"),(function(){t.Settings.instance().clearAll(),s.reload()})))}static isSettingVisible(e){const t=e.descriptor();return"title"in t&&"category"in t}_addSetting(e){if(!w.isSettingVisible(e))return;const s=this._sectionElement(e.descriptor().category);if(!s)return;const n=t.Settings.instance().moduleSetting(e.descriptor().settingName),i=p.createControlForSetting(n);i&&s.appendChild(i)}_addSettingUI(e){const t=e.descriptor().category||"";e.instance().then(function(e){const s=e.settingElement();if(s){let e=this._sectionElement(t);e||(e=this._createSectionElement(t)),e.appendChild(s)}}.bind(this))}_createSectionElement(t){const s=t&&e.UIString(t),n=this._appendSection(s);return this._nameToSection.set(t,n),n}_sectionElement(e){return this._nameToSection.get(e)||null}}var I=Object.freeze({__proto__:null,SettingsScreen:k,GenericSettingsTab:w,ExperimentsSettingsTab:class extends E{constructor(){super(e.UIString("Experiments"),"experiments-tab-content");const t=Root.Runtime.experiments.allConfigurableExperiments().sort(),s=t.filter(e=>e.unstable),n=t.filter(e=>!e.unstable);if(n.length){const t=this._appendSection(),s=e.UIString("These experiments could be dangerous and may require restart.");t.appendChild(this._createExperimentsWarningSubsection(s));for(const e of n)t.appendChild(this._createExperimentCheckbox(e))}if(s.length){const t=this._appendSection(),n=e.UIString("These experiments are particularly unstable. Enable at your own risk.");t.appendChild(this._createExperimentsWarningSubsection(n));for(const e of s)t.appendChild(this._createExperimentCheckbox(e))}}_createExperimentsWarningSubsection(t){const s=createElement("div");s.createChild("span","settings-experiments-warning-subsection-warning").textContent=e.UIString("WARNING:"),s.createTextChild(" ");return s.createChild("span","settings-experiments-warning-subsection-message").textContent=t,s}_createExperimentCheckbox(t){const s=u.CheckboxLabel.create(e.UIString(t.title),t.isEnabled()),i=s.checkboxElement;i.name=t.name,i.addEventListener("click",(function(){t.setEnabled(i.checked),n.experimentChanged(t.name,t.isEnabled()),S.InspectorView.instance().displayReloadRequiredWarning(ls`One or more settings have changed which requires a reload to take effect.`)}),!1);const r=createElement("p");return r.className=t.unstable&&!t.isEnabled()?"settings-experiment-unstable":"",r.appendChild(s),r}},ActionDelegate:class{handleAction(e,t){let s;switch(t){case"settings.show":return k._showSettingsScreen({focusTabHeader:!0}),!0;case"settings.documentation":return r.InspectorFrontendHostInstance.openInNewTab(u.addReferrerToURL("https://developers.google.com/web/tools/chrome-devtools/")),!0;case"settings.shortcuts":return n.actionTaken(i.Action.SettingsOpenedFromMenu),s={name:ls`Shortcuts`,focusTabHeader:!0},Root.Runtime.experiments.isEnabled("customKeyboardShortcuts")&&(s={name:"keybinds",focusTabHeader:!0}),k._showSettingsScreen(s),!0}return!1}},Revealer:class{reveal(e){console.assert(e instanceof t.Setting);const s=e;let n=!1;return self.runtime.extensions("setting").forEach((function(e){if(!w.isSettingVisible(e))return;e.descriptor().settingName===s.name&&(r.InspectorFrontendHostInstance.bringToFront(),k._showSettingsScreen(),n=!0)})),self.runtime.extensions(p.SettingUI).forEach((function(e){const t=e.descriptor().settings;t&&-1!==t.indexOf(s.name)&&(r.InspectorFrontendHostInstance.bringToFront(),k._showSettingsScreen(),n=!0)})),self.runtime.extensions("view").forEach((function(e){if("settings-view"!==e.descriptor().location)return;const t=e.descriptor().settings;t&&-1!==t.indexOf(s.name)&&(r.InspectorFrontendHostInstance.bringToFront(),k._showSettingsScreen({name:e.descriptor().id}),n=!0)})),n?Promise.resolve():Promise.reject()}}});class y extends a.VBox{constructor(){super(!0),this.registerRequiredCSS("settings/frameworkBlackboxSettingsTab.css");const s=this.contentElement.createChild("div","header");s.textContent=ls`Framework Blackboxing`,c.markAsHeading(s,1),this.contentElement.createChild("div","intro").textContent=ls`Debugger will skip through the scripts and will not stop on exceptions thrown by them.`;const n=this.contentElement.createChild("div","blackbox-content-scripts");n.appendChild(p.createSettingCheckbox(ls`Blackbox content scripts`,t.Settings.instance().moduleSetting("skipContentScripts"),!0)),n.title=ls`Blackbox content scripts (extension scripts in the page)`,this._blackboxLabel=e.UIString("Blackbox"),this._disabledLabel=e.UIString("Disabled"),this._list=new x.ListWidget(this),this._list.element.classList.add("blackbox-list"),this._list.registerRequiredCSS("settings/frameworkBlackboxSettingsTab.css");const i=document.createElement("div");i.classList.add("blackbox-list-empty"),i.textContent=e.UIString("No blackboxed patterns"),this._list.setEmptyPlaceholder(i),this._list.show(this.contentElement);const r=u.createTextButton(e.UIString("Add pattern..."),this._addButtonClicked.bind(this),"add-button");c.setAccessibleName(r,ls`Add filename pattern`),this.contentElement.appendChild(r),this._setting=t.Settings.instance().moduleSetting("skipStackFramesPattern"),this._setting.addChangeListener(this._settingUpdated,this),this.setDefaultFocusedElement(r)}wasShown(){super.wasShown(),this._settingUpdated()}_settingUpdated(){this._list.clear();const e=this._setting.getAsArray();for(let t=0;t<e.length;++t)this._list.appendItem(e[t],!0)}_addButtonClicked(){this._list.addNewItem(this._setting.getAsArray().length,{pattern:"",disabled:!1})}renderItem(e,t){const s=document.createElement("div");s.classList.add("blackbox-list-item");const n=s.createChild("div","blackbox-pattern");return n.textContent=e.pattern,n.title=ls`Blackbox scripts whose names match '${e.pattern}'`,s.createChild("div","blackbox-separator"),s.createChild("div","blackbox-behavior").textContent=e.disabled?this._disabledLabel:this._blackboxLabel,e.disabled&&s.classList.add("blackbox-disabled"),s}removeItemRequested(e,t){const s=this._setting.getAsArray();s.splice(t,1),this._setting.setAsArray(s)}commitEdit(e,t,s){e.pattern=t.control("pattern").value.trim(),e.disabled=t.control("behavior").value===this._disabledLabel;const n=this._setting.getAsArray();s&&n.push(e),this._setting.setAsArray(n)}beginEdit(e){const t=this._createEditor();return t.control("pattern").value=e.pattern,t.control("behavior").value=e.disabled?this._disabledLabel:this._blackboxLabel,t}_createEditor(){if(this._editor)return this._editor;const t=new x.Editor;this._editor=t;const s=t.contentElement(),n=s.createChild("div","blackbox-edit-row");n.createChild("div","blackbox-pattern").textContent=e.UIString("Pattern"),n.createChild("div","blackbox-separator blackbox-separator-invisible"),n.createChild("div","blackbox-behavior").textContent=e.UIString("Behavior");const i=s.createChild("div","blackbox-edit-row"),r=t.createInput("pattern","text","/framework\\.js$",function(e,t,s){const n=s.value.trim(),i=this._setting.getAsArray();if(!n.length)return{valid:!1,errorMessage:ls`Pattern cannot be empty`};for(let e=0;e<i.length;++e)if(e!==t&&i[e].pattern===n)return{valid:!1,errorMessage:ls`Pattern already exists`};let r;try{r=new RegExp(n)}catch(e){}if(!r)return{valid:!1,errorMessage:ls`Pattern must be a valid regular expression`};return{valid:!0}}.bind(this));c.setAccessibleName(r,ls`Pattern`),i.createChild("div","blackbox-pattern").appendChild(r),i.createChild("div","blackbox-separator blackbox-separator-invisible");const a=t.createSelect("behavior",[this._blackboxLabel,this._disabledLabel],(function(e,t,s){return{valid:!0}}));return c.setAccessibleName(a,ls`Behavior`),i.createChild("div","blackbox-behavior").appendChild(a),t}}var T=Object.freeze({__proto__:null,FrameworkBlackboxSettingsTab:y});class L extends a.VBox{constructor(){super(!0),this.registerRequiredCSS("settings/keybindsSettingsTab.css");this.contentElement.createChild("header").createChild("h1").textContent=ls`Shortcuts`;const e=self.Common.settings.moduleSetting("activeKeybindSet");e.addChangeListener(this.update,this);const t=p.createControlForSetting(e,ls`Match shortcuts from preset`);t.classList.add("keybinds-set-select"),this.contentElement.appendChild(t),this._items=new _.ListModel,this._list=new f.ListControl(this._items,this,f.ListMode.NonViewport),this._items.replaceAll(this._createListItems()),c.markAsList(this._list.element),this.registerRequiredCSS("settings/keybindsSettingsTab.css"),this.contentElement.appendChild(this._list.element),c.setAccessibleName(this._list.element,ls`Keyboard shortcuts list`),this.update()}createElementForItem(e){const t=document.createElement("div");if(t.classList.add("keybinds-list-item"),c.markAsListitem(t),t.tabIndex=e===this._list.selectedItem()?0:-1,"string"==typeof e)c.setLevel(t,1),t.classList.add("keybinds-category-header"),t.textContent=e;else{c.setLevel(t,2),t.createChild("div","keybinds-action-name keybinds-list-text").textContent=e.title();const s=self.UI.shortcutRegistry.shortcutsForAction(e.id());if(s.forEach((e,s)=>{if(!e.isDefault()){const e=v.Icon.create("largeicon-shortcut-changed","keybinds-modified");c.setAccessibleName(e,ls`Shortcut provided by preset`),t.appendChild(e)}const n=t.createChild("div","keybinds-shortcut keybinds-list-text");e.descriptors.flatMap(e=>e.name.split(" + ")).forEach(e=>{n.createChild("span","keybinds-key").textContent=e})}),0===s.length){if(self.UI.shortcutRegistry.actionHasDefaultShortcut(e.id())){const e=v.Icon.create("largeicon-shortcut-changed","keybinds-modified");c.setAccessibleName(e,ls`Shortcut provided by preset`),t.appendChild(e)}const s=t.createChild("div","keybinds-shortcut keybinds-list-text");c.setAccessibleName(s,ls`No shortcut for action`)}}return t}heightForItem(e){return 0}isItemSelectable(e){return!0}selectedItemChanged(e,t,s,n){s&&(s.tabIndex=-1),n&&(n.tabIndex=0,this._list.element.hasFocus()&&n.focus())}updateSelectedItemARIA(e,t){return!0}_createListItems(){const e=C.ActionRegistry.instance().actions().sort((e,t)=>e.category()<t.category()?-1:e.category()>t.category()?1:e.id()<t.id()?-1:e.id()>t.id()?1:0),t=[];let s;return e.forEach(e=>{s!==e.category()&&t.push(e.category()),t.push(e),s=e.category()}),t}update(){this._list.refreshAllItems(),this._list.selectedItem()||this._list.selectItem(this._items.at(0))}}var A=Object.freeze({__proto__:null,KeybindsSettingsTab:L,KeybindsItem:void 0});export{T as FrameworkBlackboxSettingsTab,A as KeybindsSettingsTab,I as SettingsScreen};
